import{a as m}from"./chunk-BGUWFEHR.mjs";import{a as p}from"./chunk-Q3HWT5AD.mjs";import{a as c}from"./chunk-YSXGDEY5.mjs";import{Tool as y}from"@goat-sdk/core";import{EVMWalletClient as d}from"@goat-sdk/wallet-evm";function u(n,e,r,o){var a=arguments.length,t=a<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")t=Reflect.decorate(n,e,r,o);else for(var s=n.length-1;s>=0;s--)(i=n[s])&&(t=(a<3?i(t):a>3?i(e,r,t):i(e,r))||t);return a>3&&t&&Object.defineProperty(e,r,t),t}c(u,"_ts_decorate");function l(n,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(n,e)}c(l,"_ts_metadata");var f=class{static{c(this,"AgreementFactoryService")}contractAddress;constructor({contractAddress:e}){this.contractAddress=e}async deployAgreementPair(e,r){try{return{transactionHash:(await r.sendTransaction({to:this.contractAddress,abi:m,functionName:"deployAgreementPair",args:[BigInt(e.minGasToComplete)]})).hash,message:"Agreement pair deployment transaction sent successfully"}}catch(o){throw Error(`Failed to deploy Agreement pair: ${o}`)}}};u([y({description:"Deploy agreement service contract pair in order to follow provider agreements"}),l("design:type",Function),l("design:paramtypes",[typeof p>"u"?Object:p,typeof d>"u"?Object:d]),l("design:returntype",Promise)],f.prototype,"deployAgreementPair",null);export{f as a};
