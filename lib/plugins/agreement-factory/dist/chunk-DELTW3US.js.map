{"version":3,"sources":["/home/awolfsdorf/hack/aleph/blackbox/work-box/lib/plugins/agreement-factory/dist/chunk-DELTW3US.js","../src/agreement-factory.service.ts"],"names":[],"mappings":"AAAA;AACE;AACF,sDAA4B;AAC5B;AACE;AACF,sDAA4B;AAC5B;AACA;ACPA,sCAAqB;AAKd,IAAM,wBAAA,EAAN,MAA8B;AAAA,EACzB;AAAA,EAER,WAAA,CAAY,EAAE,gBAAgB,CAAA,EAAuC;AACjE,IAAA,IAAA,CAAK,gBAAA,EAAkB,eAAA;AAAA,EAC3B;AAAA,EAKA,MAAM,mBAAA,CAAoB,YAAA,EAA+B,UAAA,EAA2C;AAChG,IAAA,IAAI;AACA,MAAA,MAAM,KAAA,EAAO,MAAM,YAAA,CAAa,eAAA,CAAgB;AAAA,QAC5C,EAAA,EAAI,IAAA,CAAK,eAAA;AAAA,QACT,GAAA,EAAK,sCAAA;AAAA,QACL,YAAA,EAAc,qBAAA;AAAA,QACd,IAAA,EAAM,CAAC,MAAA,CAAO,UAAA,CAAW,gBAAgB,CAAC;AAAA,MAC9C,CAAC,CAAA;AAED,MAAA,OAAO;AAAA,QACH,eAAA,EAAiB,IAAA,CAAK,IAAA;AAAA,QACtB,OAAA,EAAS;AAAA,MACb,CAAA;AAAA,IACJ,EAAA,MAAA,CAAS,KAAA,EAAO;AACZ,MAAA,MAAM,KAAA,CAAM,CAAA,iCAAA,EAAoC,KAAK,CAAA,CAAA;AACzD,IAAA;AACJ,EAAA;AACJ;AAjBU;AAHA,EAAA;AACW,IAAA;AAChB,EAAA;AACK;ADqBkD;AACA;AACA;AACA","file":"/home/awolfsdorf/hack/aleph/blackbox/work-box/lib/plugins/agreement-factory/dist/chunk-DELTW3US.js","sourcesContent":[null,"import { Tool } from \"@goat-sdk/core\";\nimport { EVMWalletClient } from \"@goat-sdk/wallet-evm\";\nimport { AGREEMENT_FACTORY_ABI } from \"./abi\";\nimport { DeployAgreementPairParameters } from \"./parameters\";\n\nexport class AgreementFactoryService {\n    private contractAddress: `0x${string}`;\n\n    constructor({ contractAddress }: { contractAddress: `0x${string}` }) {\n        this.contractAddress = contractAddress;\n    }\n\n    @Tool({\n        description: \"Deploy agreement service contract pair in order to follow provider agreements\",\n    })\n    async deployAgreementPair(walletClient: EVMWalletClient, parameters: DeployAgreementPairParameters) {\n        try {\n            const hash = await walletClient.sendTransaction({\n                to: this.contractAddress,\n                abi: AGREEMENT_FACTORY_ABI,\n                functionName: \"deployAgreementPair\",\n                args: [BigInt(parameters.minGasToComplete)],\n            });\n            \n            return {\n                transactionHash: hash.hash,\n                message: \"Agreement pair deployment transaction sent successfully\",\n            };\n        } catch (error) {\n            throw Error(`Failed to deploy Agreement pair: ${error}`);\n        }\n    }\n} "]}