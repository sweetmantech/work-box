{"version":3,"sources":["../src/agreement-factory.plugin.ts"],"sourcesContent":["import { type Chain, PluginBase } from \"@goat-sdk/core\";\nimport type { EVMWalletClient } from \"@goat-sdk/wallet-evm\";\nimport { AgreementFactoryService } from \"./agreement-factory.service\";\nimport { createToolParameters } from \"@goat-sdk/core\";\nimport { z } from \"zod\";\n\nexport class DeployAgreementPairParameters extends createToolParameters(\n    z.object({\n        walletClient: z.any().describe(\"The EVMWalletClient to use for transaction\"),\n        minGasToComplete: z.string().describe(\"The minimum gas required for transactions in the paymaster\").default(\"10000\"),\n    }),\n) {} \n\nexport type AgreementFactoryPluginCtorParams = {\n    contractAddress: `0x${string}`;\n};\n\nexport class AgreementFactoryPlugin extends PluginBase<EVMWalletClient> {\n    constructor({ contractAddress }: AgreementFactoryPluginCtorParams) {\n        console.log(\"contractAddress\", contractAddress);\n        super(\"agreement-factory\", [new AgreementFactoryService({ contractAddress })]);\n    }\n\n    supportsChain = (chain: Chain) => chain.type === \"evm\";\n}\n\nexport function agreementFactory({ contractAddress }: AgreementFactoryPluginCtorParams) {\n    return new AgreementFactoryPlugin({ contractAddress });\n}\n"],"mappings":";;;;;AAAA,SAAqB,kBAAkB;AAGvC,SAAS,4BAA4B;AACrC,SAAS,SAAS;AAEX,IAAM,gCAAN,cAA4C;AAAA,EAC/C,EAAE,OAAO;AAAA,IACL,cAAc,EAAE,IAAI,EAAE,SAAS,4CAA4C;AAAA,IAC3E,kBAAkB,EAAE,OAAO,EAAE,SAAS,4DAA4D,EAAE,QAAQ,OAAO;AAAA,EACvH,CAAC;AACL,EAAE;AAAC;AAMI,IAAM,yBAAN,cAAqC,WAA4B;AAAA,EACpE,YAAY,EAAE,gBAAgB,GAAqC;AAC/D,YAAQ,IAAI,mBAAmB,eAAe;AAC9C,UAAM,qBAAqB,CAAC,IAAI,wBAAwB,EAAE,gBAAgB,CAAC,CAAC,CAAC;AAAA,EACjF;AAAA,EAEA,gBAAgB,CAAC,UAAiB,MAAM,SAAS;AACrD;AAEO,SAAS,iBAAiB,EAAE,gBAAgB,GAAqC;AACpF,SAAO,IAAI,uBAAuB,EAAE,gBAAgB,CAAC;AACzD;","names":[]}