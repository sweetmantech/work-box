{"version":3,"sources":["../src/agreement-factory.service.ts"],"sourcesContent":["import { Tool } from \"@goat-sdk/core\";\nimport { EVMWalletClient } from \"@goat-sdk/wallet-evm\";\nimport { AGREEMENT_FACTORY_ABI } from \"./abi\";\nimport { DeployAgreementPairParameters } from \"./parameters\";\n\nexport class AgreementFactoryService {\n    private contractAddress: `0x${string}`;\n\n    constructor({ contractAddress }: { contractAddress: `0x${string}` }) {\n        this.contractAddress = contractAddress;\n    }\n\n    @Tool({\n        description: \"Deploy agreement service contract pair in order to follow provider agreements\",\n    })\n    async deployAgreementPair(walletClient: EVMWalletClient, parameters: DeployAgreementPairParameters) {\n        try {\n            const hash = await walletClient.sendTransaction({\n                to: this.contractAddress,\n                abi: AGREEMENT_FACTORY_ABI,\n                functionName: \"deployAgreementPair\",\n                args: [BigInt(parameters.minGasToComplete)],\n            });\n            \n            return {\n                transactionHash: hash.hash,\n                message: \"Agreement pair deployment transaction sent successfully\",\n            };\n        } catch (error) {\n            throw Error(`Failed to deploy Agreement pair: ${error}`);\n        }\n    }\n} "],"mappings":";;;;;;;;AAAA,SAAS,YAAY;AAKd,IAAM,0BAAN,MAA8B;AAAA,EACzB;AAAA,EAER,YAAY,EAAE,gBAAgB,GAAuC;AACjE,SAAK,kBAAkB;AAAA,EAC3B;AAAA,EAKA,MAAM,oBAAoB,cAA+B,YAA2C;AAChG,QAAI;AACA,YAAM,OAAO,MAAM,aAAa,gBAAgB;AAAA,QAC5C,IAAI,KAAK;AAAA,QACT,KAAK;AAAA,QACL,cAAc;AAAA,QACd,MAAM,CAAC,OAAO,WAAW,gBAAgB,CAAC;AAAA,MAC9C,CAAC;AAED,aAAO;AAAA,QACH,iBAAiB,KAAK;AAAA,QACtB,SAAS;AAAA,MACb;AAAA,IACJ,SAAS,OAAO;AACZ,YAAM,MAAM,oCAAoC,KAAK,EAAE;AAAA,IAC3D;AAAA,EACJ;AACJ;AAjBU;AAAA,EAHL,KAAK;AAAA,IACF,aAAa;AAAA,EACjB,CAAC;AAAA,GATQ,wBAUH;","names":[]}